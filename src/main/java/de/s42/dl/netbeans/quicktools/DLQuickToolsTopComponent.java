// <editor-fold desc="The MIT License" defaultstate="collapsed">
/*
 * The MIT License
 * 
 * Copyright 2023 Studio 42 GmbH ( https://www.s42m.de ).
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
//</editor-fold>
package de.s42.dl.netbeans.quicktools;

import de.s42.log.LogManager;
import de.s42.log.Logger;
import java.awt.BorderLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.RequestProcessor;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
	dtd = "-//de.s42.dl.netbeans.quicktools//DLQuickTools//EN",
	autostore = false
)
@TopComponent.Description(
	preferredID = "DLQuickToolsTopComponent",
	iconBase = "de/s42/dl/netbeans/dl-icon-keyword.png",
	persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "navigator", openAtStartup = true)
@ActionID(category = "Window", id = "de.s42.dl.netbeans.quicktools.DLQuickToolsTopComponent")
@ActionReference(path = "Menu/Window" , position = 4242 )
@TopComponent.OpenActionRegistration(
	displayName = "#CTL_DLQuickToolsAction",
	preferredID = "DLQuickToolsTopComponent"
)
@Messages({
	"CTL_DLQuickToolsAction=DLQuickTools",
	"CTL_DLQuickToolsTopComponent=DL Quicktools",
	"HINT_DLQuickToolsTopComponent=This is a DLQuickTools window"
})
public final class DLQuickToolsTopComponent extends TopComponent
{
	private final static Logger log = LogManager.getLogger(DLQuickToolsTopComponent.class.getName());

	protected DLQuickToolsPanel toolsPanel;

	public DLQuickToolsTopComponent()
	{
		initComponents();
		setName(Bundle.CTL_DLQuickToolsTopComponent());
		setToolTipText(Bundle.HINT_DLQuickToolsTopComponent());
		initComponent();
	}
	
	private void initComponent()
	{
		toolsContainer.setLayout(new BorderLayout());
		
		toolsPanel = new DLQuickToolsPanel();
		toolsContainer.add(toolsPanel, BorderLayout.CENTER);		
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        contentContainer = new javax.swing.JPanel();
        toolsContainer = new javax.swing.JPanel();

        javax.swing.GroupLayout toolsContainerLayout = new javax.swing.GroupLayout(toolsContainer);
        toolsContainer.setLayout(toolsContainerLayout);
        toolsContainerLayout.setHorizontalGroup(
            toolsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );
        toolsContainerLayout.setVerticalGroup(
            toolsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout contentContainerLayout = new javax.swing.GroupLayout(contentContainer);
        contentContainer.setLayout(contentContainerLayout);
        contentContainerLayout.setHorizontalGroup(
            contentContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        contentContainerLayout.setVerticalGroup(
            contentContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentContainer;
    private javax.swing.JPanel toolsContainer;
    // End of variables declaration//GEN-END:variables
	@Override
	public void componentOpened()
	{
		//log.debug("componentOpened");
		toolsPanel.init();
	}

	@Override
	public void componentClosed()
	{
		//log.debug("componentClosed");
		toolsPanel.suspend();
	}

	void writeProperties(java.util.Properties p)
	{
		// better to version settings since initial version as advocated at
		// http://wiki.apidesign.org/wiki/PropertyFiles
		p.setProperty("version", "1.0");
		// TODO store your settings
	}

	void readProperties(java.util.Properties p)
	{
		String version = p.getProperty("version");
		// TODO read your settings according to their version
	}
}
